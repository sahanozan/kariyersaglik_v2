-- ðŸ”§ Ã–NCE SÃœTUNLARI OLUÅžTUR - Sonra RLS PolitikalarÄ±
-- Bu dosyayÄ± Ã–NCE Ã§alÄ±ÅŸtÄ±rÄ±n, sonra FIX_INFINITE_RECURSION.sql'i Ã§alÄ±ÅŸtÄ±rÄ±n

-- ==============================================
-- 1. PROFILES TABLOSUNA SÃœTUNLARI EKLE
-- ==============================================

-- deleted_at sÃ¼tunu
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                   WHERE table_name = 'profiles' AND column_name = 'deleted_at') THEN
        ALTER TABLE profiles ADD COLUMN deleted_at timestamptz;
        RAISE NOTICE 'deleted_at sÃ¼tunu eklendi';
    ELSE
        RAISE NOTICE 'deleted_at sÃ¼tunu zaten mevcut';
    END IF;
END $$;

-- deletion_reason sÃ¼tunu
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                   WHERE table_name = 'profiles' AND column_name = 'deletion_reason') THEN
        ALTER TABLE profiles ADD COLUMN deletion_reason text;
        RAISE NOTICE 'deletion_reason sÃ¼tunu eklendi';
    ELSE
        RAISE NOTICE 'deletion_reason sÃ¼tunu zaten mevcut';
    END IF;
END $$;

-- deleted_by sÃ¼tunu
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                   WHERE table_name = 'profiles' AND column_name = 'deleted_by') THEN
        ALTER TABLE profiles ADD COLUMN deleted_by uuid;
        RAISE NOTICE 'deleted_by sÃ¼tunu eklendi';
    ELSE
        RAISE NOTICE 'deleted_by sÃ¼tunu zaten mevcut';
    END IF;
END $$;

-- ==============================================
-- 2. DÄ°ÄžER TABLOLARA DA SÃœTUNLARI EKLE
-- ==============================================

-- Posts tablosuna deleted_at ekle
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                   WHERE table_name = 'posts' AND column_name = 'deleted_at') THEN
        ALTER TABLE posts ADD COLUMN deleted_at timestamptz;
        RAISE NOTICE 'posts tablosuna deleted_at sÃ¼tunu eklendi';
    ELSE
        RAISE NOTICE 'posts tablosunda deleted_at sÃ¼tunu zaten mevcut';
    END IF;
END $$;

-- Comments tablosuna deleted_at ekle
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                   WHERE table_name = 'comments' AND column_name = 'deleted_at') THEN
        ALTER TABLE comments ADD COLUMN deleted_at timestamptz;
        RAISE NOTICE 'comments tablosuna deleted_at sÃ¼tunu eklendi';
    ELSE
        RAISE NOTICE 'comments tablosunda deleted_at sÃ¼tunu zaten mevcut';
    END IF;
END $$;

-- Job listings tablosuna deleted_at ekle
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                   WHERE table_name = 'job_listings' AND column_name = 'deleted_at') THEN
        ALTER TABLE job_listings ADD COLUMN deleted_at timestamptz;
        RAISE NOTICE 'job_listings tablosuna deleted_at sÃ¼tunu eklendi';
    ELSE
        RAISE NOTICE 'job_listings tablosunda deleted_at sÃ¼tunu zaten mevcut';
    END IF;
END $$;

-- Chat messages tablosuna deleted_at ekle
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                   WHERE table_name = 'chat_messages' AND column_name = 'deleted_at') THEN
        ALTER TABLE chat_messages ADD COLUMN deleted_at timestamptz;
        RAISE NOTICE 'chat_messages tablosuna deleted_at sÃ¼tunu eklendi';
    ELSE
        RAISE NOTICE 'chat_messages tablosunda deleted_at sÃ¼tunu zaten mevcut';
    END IF;
END $$;

-- ==============================================
-- 3. SÃœTUNLARIN EKLENDÄ°ÄžÄ°NÄ° KONTROL ET
-- ==============================================

-- Profiles tablosundaki sÃ¼tunlarÄ± listele
SELECT 
    column_name, 
    data_type, 
    is_nullable
FROM information_schema.columns 
WHERE table_name = 'profiles' 
AND column_name IN ('deleted_at', 'deletion_reason', 'deleted_by')
ORDER BY column_name;

-- Posts tablosundaki deleted_at sÃ¼tununu kontrol et
SELECT 
    column_name, 
    data_type, 
    is_nullable
FROM information_schema.columns 
WHERE table_name = 'posts' 
AND column_name = 'deleted_at';

-- Comments tablosundaki deleted_at sÃ¼tununu kontrol et
SELECT 
    column_name, 
    data_type, 
    is_nullable
FROM information_schema.columns 
WHERE table_name = 'comments' 
AND column_name = 'deleted_at';

-- Job listings tablosundaki deleted_at sÃ¼tununu kontrol et
SELECT 
    column_name, 
    data_type, 
    is_nullable
FROM information_schema.columns 
WHERE table_name = 'job_listings' 
AND column_name = 'deleted_at';

-- ==============================================
-- TAMAMLANDI! âœ…
-- ==============================================
-- ArtÄ±k FIX_INFINITE_RECURSION.sql dosyasÄ±nÄ± Ã§alÄ±ÅŸtÄ±rabilirsiniz
-- TÃ¼m gerekli sÃ¼tunlar oluÅŸturuldu

